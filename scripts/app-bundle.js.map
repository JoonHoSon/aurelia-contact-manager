{"version":3,"sources":["app.js","contact-detail.js","contact-list.js","environment.js","main.js","no-selection.js","utility.js","web-api.js","resources/index.js","/Users/joonho/Documents/Development/private_project/study/contact-manager/src/app.html","/Users/joonho/Documents/Development/private_project/study/contact-manager/src/styles.css","/Users/joonho/Documents/Development/private_project/study/contact-manager/src/contact-list.html","/Users/joonho/Documents/Development/private_project/study/contact-manager/src/no-selection.html","/Users/joonho/Documents/Development/private_project/study/contact-manager/src/contact-detail.html"],"names":["App","message","configureRouter","config","router","title","map","route","moduleId","name","ContactDetail","inject","api","activate","params","routeConfig","getContactDetails","id","then","contact","navModel","setTitle","firstName","originalContact","JSON","parse","stringify","save","saveContact","canDeactivate","confirm","lastName","isRequesting","ContactList","contacts","created","getContactList","select","selectId","debug","testing","configure","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","setRoot","NoSelection","areEqual","obj1","obj2","Object","keys","every","key","hasOwnProperty","latency","getId","email","phoneNumber","WebAPI","setTimeout","results","x","resolve","found","filter","instance","index","indexOf","push"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\n    constructor() {\n        this.message = 'Hello World!';\n    }\n\n    configureRouter(config, router) {\n        config.title = 'Contacts';\n        config.map([\n            { route: '', moduleId: 'no-selection', title: 'Select' },\n            { route: 'contact/:id', moduleId: 'contact-detail', name: 'contacts' }\n        ]);\n    }\n}\n","import { WebAPI } from './web-api';\nimport { areEqual } from './utility';\n\nexport class ContactDetail {\n    static inject() {\n        return [WebAPI];\n    }\n\n    constructor(api) {\n        this.api = api;\n    }\n\n    activate(params, routeConfig) {\n        this.routeConfig = routeConfig;\n\n        return this.api.getContactDetails(params.id).then(contact => {\n            this.contact = contact;\n            this.routeConfig.navModel.setTitle(contact.firstName);\n            this.originalContact = JSON.parse(JSON.stringify(contact));\n        });\n    }\n\n    get canSave() {\n        return this.contact.firstName && this.contact.lastName && !this.api.isRequesting;\n    }\n\n    save() {\n        this.api.saveContact(this.contact).then(contact => {\n            this.contact = contact;\n            this.routeConfig.navModel.setTitle(contact.firstName);\n            this.originalContact = JSON.parse(JSON.stringify(contact));\n        });\n    }\n\n    canDeactivate() {\n        if (!areEqual(this.originalContact, this.contact)) {\n            return confirm('You have unsaved changes. Are you sure you wish to leave?');\n        }\n\n        return true;\n    }\n}\n","import {WebAPI} from './web-api';\n\nexport class ContactList {\n\tstatic inject() {\n\t\treturn [WebAPI]\n\t};\n\n\tconstructor(api) {\n\t\tthis.api = api;\n\t\tthis.contacts = [];\n\t}\n\n\tcreated() {\n\t\tthis.api.getContactList().then(contacts => this.contacts = contacts);\n\t}\n\n\tselect(contact) {\n\t\tthis.selectId = contact.id;\n\t\treturn true;\n\t}\n}","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class NoSelection {\n\tconstructor() {\n\t\tthis.message = 'Please Select a Contact.';\n\t}\n}","export function areEqual(obj1, obj2) {\n\treturn Object.keys(obj1).every((key) => obj2.hasOwnProperty(key) && (obj1[key] === obj2[key]));\n};","let latency = 200;\nlet id = 0;\n\nfunction getId(){\n  return ++id;\n}\n\nlet contacts = [\n  {\n    id:getId(),\n    firstName:'John',\n    lastName:'Tolkien',\n    email:'tolkien@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Clive',\n    lastName:'Lewis',\n    email:'lewis@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Owen',\n    lastName:'Barfield',\n    email:'barfield@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Charles',\n    lastName:'Williams',\n    email:'williams@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Roger',\n    lastName:'Green',\n    email:'green@inklings.com',\n    phoneNumber:'867-5309'\n  }\n];\n\nexport class WebAPI {\n  isRequesting = false;\n  \n  getContactList(){\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let results = contacts.map(x =>  { return {\n          id:x.id,\n          firstName:x.firstName,\n          lastName:x.lastName,\n          email:x.email\n        }});\n        resolve(results);\n        this.isRequesting = false;\n      }, latency);\n    });\n  }\n\n  getContactDetails(id){\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let found = contacts.filter(x => x.id == id)[0];\n        resolve(JSON.parse(JSON.stringify(found)));\n        this.isRequesting = false;\n      }, latency);\n    });\n  }\n\n  saveContact(contact){\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let instance = JSON.parse(JSON.stringify(contact));\n        let found = contacts.filter(x => x.id == contact.id)[0];\n\n        if(found){\n          let index = contacts.indexOf(found);\n          contacts[index] = instance;\n        }else{\n          instance.id = getId();\n          contacts.push(instance);\n        }\n\n        this.isRequesting = false;\n        resolve(instance);\n      }, latency);\n    });\n  }\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n",null,null,null,null,null],"sourceRoot":"../src"}